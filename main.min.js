let currentTime = 0,
  isPlaying = !1,
  numberSounds = [],
  waitingNumber = 6e3,
  timeout = null,
  numbers = [];
const beat = document.querySelector(".beat"),
  startBtn = document.querySelector(".start"),
  stopBtn = document.querySelector(".stop"),
  winBtn = document.querySelector(".win"),
  resetBtn = document.querySelector(".reset"),
  numberDiv = document.querySelector(".numberDiv"),
  numberContainer = document.querySelector(".multiple-items"),
  checkWinInput = document.querySelector("#checkWin"),
  checkWinBtn = document.querySelector("#checkWinBtn"),
  winInputOverlay = document.querySelector(".overlay");
function addShowcase(t) {
  $(".multiple-items").slick("slickAdd", `<div class="number">${t}</div>`);
}
function importSounds() {
  for (let t = 1; t <= 90; t++) numberSounds[t] = `./assets/audio/${t}.mp3`;
}
function randomNumber(t, e) {
  return Math.floor(Math.random() * e) + t;
}
function playNumber() {
  numbers.length < 90 &&
    (timeout = setTimeout(() => {
      let t;
      do t = randomNumber(1, 90);
      while (numbers.includes(t));
      numbers.push(t),
        displayNumber(t),
        addShowcase(t),
        readNumber(t),
        playNumber();
    }, waitingNumber));
}
function stopNumber() {
  clearTimeout(timeout);
}
function readNumber(t) {
  let e = new Audio(numberSounds[t]);
  (e.volume = 1), e.play();
}
function displayNumber(t) {
  numberDiv.textContent = t;
}
function hideStartButton() {
  startBtn.classList.add("hide");
}
function showStartButton() {
  startBtn.classList.remove("hide");
}
function hideStopButton() {
  stopBtn.classList.add("hide");
}
function showStopButton() {
  stopBtn.classList.remove("hide");
}
function hideWinButton() {
  winBtn.classList.add("hide");
}
function showWinButton() {
  winBtn.classList.remove("hide");
}
function showCheckWinOverlay() {
  winInputOverlay.classList.remove("hide");
}
function hideCheckWinOverlay() {
  winInputOverlay.classList.add("hide");
}
function startBeat() {
  (isPlaying = !0),
    (beat.currentTime = currentTime),
    (beat.volume = 0.2),
    beat.play();
}
function stopBeat() {
  (isPlaying = !1), (currentTime = beat.currentTime), beat.pause();
}
function reset() {
  (currentTime = 0),
    (numbers = []),
    (numberDiv.textContent = "..."),
    showStopButton(),
    hideCheckWinOverlay(),
    hideStartButton(),
    startBeat(),
    playNumber(),
    $(".multiple-items").slick("slickRemove", null, null, !0);
}
function check() {
  let t = checkWinInput.value.split(",").map((t) => +t);
  return console.log(numbers), t.every((t) => numbers.includes(t));
}
function init() {
  importSounds(), hideStopButton(), hideWinButton(), hideCheckWinOverlay();
}
startBtn.addEventListener("click", () => {
  hideStartButton(),
    startBeat(),
    playNumber(),
    showStopButton(),
    showWinButton();
}),
  stopBtn.addEventListener("click", () => {
    (startBtn.textContent = "Tiếp tục"),
      showStartButton(),
      stopBeat(),
      stopNumber(),
      hideStopButton();
  }),
  winBtn.addEventListener("click", () => {
    (startBtn.textContent = "Tiếp tục"),
      showStartButton(),
      stopBeat(),
      stopNumber(),
      showCheckWinOverlay(),
      hideStopButton();
  }),
  checkWinBtn.addEventListener("click", () => {
    let t = check(),
      e = document.querySelector(".checkText"),
      n = t ? "Ch\xfac mừng bạn y\xeau" : "\xca \xea, b\xe1o động giả nhen";
    (e.textContent = n), (e.className = `checkText ${t ? "success" : "error"}`);
  }),
  resetBtn.addEventListener("click", () => {
    reset();
  }),
  winInputOverlay.addEventListener("click", (t) => {
    let e = document.querySelector(".winInput");
    e.contains(t.target) ||
      resetBtn.contains(t.target) ||
      hideCheckWinOverlay();
  }),
  init();
